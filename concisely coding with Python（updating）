#此文档关注代码规范化和简洁化问题，从各文档中汲取案例继续剖析
 
#--------------------------------------------------------Example 1--------------------------------------------------------------------#
功能实现描述：
找出规定日期区间内最早出现的日期。如在20160401后，每个对象最新出现的日期
 max_date_2016 = ('20160401' if fund_nav[fund_nav.end_date<'20160401'].empty else fund_nav[fund_nav.end_date<'20160401'].end_date.max())
 
 学习要点：
 1.dataframe中用.引用整列，和.loc[:,'XX']功能相似；
 2.fund_nav[fund_nav.end_date<'20160401'].end_date.max()  筛选符合条件的行->取列值->列值最大;
 同理，可以用fund_nav[fund_nav.end_date>=max_date_2016]进行列筛选，原理和fund_nav[(fund_nav.loc[:,'end_date']>=max_date_2016)]相同
 3.赋值语句可以和判断语句写成一句，形式为A=(X if else)
 
 #--------------------------------------------------------Example 2-------------------------------------------------------------------#
功能实现描述：
计算日增长率，一般情况是(df.loc[i,'nav']-df.loc[i-1,'nav'])/df.loc[i-1,'nav']
 
 学习要点：
 1.DataFrame shift函数的使用：
df.loc[:,'nav'] = (df.loc[:,'nav'] -df.loc[:,'nav'].shift(1))/df.loc[:,'nav'].shift(1)
 相当于把原有的df.loc[:,'nav']整列向下移动一位，两列可进行相减运算，避免用循环。
 
 #--------------------------------------------------------Example 3-------------------------------------------------------------------#
功能实现描述：
函数返回多个结果
函数定义：
def load_fund(existday, yesterday, pro): 
  xx
  return df22, df_daily
函数调用：
df22, df_daily = load_fund(existday, yesterday, pro)
学习要点：
 1.同时有多个返回值，调用的时候注意位置和数据类型的对应
 并且可以用索引控制具体取哪个返回结果：
 df22=load_fund(existday,yesterday,pro)[0]
 具体还可参考文档 https://blog.csdn.net/weixin_34309543/article/details/86005241
类似：
    df.loc[:, 'per1'] = df.rank1.div(df.shape[0]).to_list()
    df.loc[:, 'per2'] = df.rank2.div(df.shape[0]).to_list()
    
    df.loc[:, 'start_day'] = df.start_day.min()
    df.loc[:, 'end_day'] = df.end_day.max()
#---------------------------------------------------------Example 4--------------------------------------------------------------------#
功能实现描述：
 # 近3个月交易笔数比上近6、12、24、36个月平均交易笔数(Example from https://github.com/DuncanZhou/ZCX/blob/master/Processing.py)

 for m in [6, 12, 24, 36]:

     feat = 'mean_query_times_last_3divide_{}_month'.format(m)

     for b in [b_a, b_a_test]:

         b[feat] = b['mean_query_times_last_3_month'] / (0.001 + b['mean_query_times_last_{}_month'.format(m)])

     feats.append(feat)

 return feats
学习要点：
通过{}.format(m)的方式控制列循环，类似于%s,%(变量名)
#--------------------------------------------------------Example 5--------------------------------------------------------------------#
功能实现描述：(Example from https://github.com/DuncanZhou/ZCX/blob/master/Processing.py)
读入指定目录下的数据，其中目录地址有规律变化
def ReadExtraTrainTestData(valid_number,use_B=False):
    path = "./train_test/train_test/train_test_"
    # read train A
    train_behavior_A = pd.read_csv(path+valid_number+"/scene_A/train_behavior_A.csv")
    train_consumer_A = pd.read_csv(path+valid_number+"/scene_A/train_consumer_A.csv")
    train_ccx_A = pd.read_csv(path+valid_number+"/scene_A/train_ccx_A.csv")
    # read test A
    test_behavior_A = pd.read_csv(path+valid_number+"/scene_A/test_behavior_A.csv")
    test_consumer_A = pd.read_csv(path+valid_number+"/scene_A/test_consumer_A.csv")
    test_ccx_A = pd.read_csv(path+valid_number+"/scene_A/test_ccx_A.csv")
    # read target A
    train_target = pd.read_csv(path+valid_number+"/scene_A/train_target_A.csv")
    test_target = pd.read_csv(path+valid_number+"/scene_A/test_target_A.csv")
 学习要点：
 可变部分提前定义好或者通过参数传入
    
#------------------------------------------------------------Example 8-----------------------------------------------------------------#
功能实现描述：
批量定义参数
  param_category = {
            '0001':lambda x: (0.7,0.7),
            '0002':lambda x: (0.7,0.6)}
    param_1,param_2 = param_category[category](0)

学习要点：
 1.lambda x


#------------------------------------------------------------Example 9-----------------------------------------------------------------#
功能实现描述：
删除重复列和实现最新
函数定义：
def DeleteComplicate(consuming):

    compare_cols = [col for col in consuming.columns if col != 'V_11']

    consuming = consuming[compare_cols].drop_duplicates(keep='last')

    return consuming

学习要点：
 1.用list[]循环的方式实现取列
 2.drop_duplicates及类似函数实现去重
 具体还可参考文档 https://blog.csdn.net/weixin_34309543/article/details/86005241
 #--------------------------------------------------------Example 10-------------------------------------------------------------------#
 
 trade_list = data_info[data_info.values.isnull() == False].value_date.drop_duplicates().sort_values().loc[:]
学习要点：
 1.一句话完成多重功能
 
 #------------------------------------------------------Example 11---------------------------------------------------------------------#
 for i in tqdm.tqdm(list_A):
 随着i循环进度条出现变化
 #------------------------------------------------------Example 12---------------------------------------------------------------------#
train.key_index = train.key_index.apply(lambda x: 1 if x<=0.92 else 0)
学习要点：
lambda 实现判断
